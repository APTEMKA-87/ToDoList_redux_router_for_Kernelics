{"version":3,"sources":["components/HomePage/Home.module.css","components/About/About.module.css","components/ToDoLists/ToDoLists.module.css","components/NotFoundPage/NotFoundPage.module.css","components/AddItemForm.tsx","state/todolists-reducer.ts","components/HomePage/HomePage.tsx","components/About/About.tsx","components/EditableSpan.tsx","components/Task.tsx","components/Todolist.tsx","state/tasks-reducer.ts","components/ToDoLists/ToDoLists.tsx","components/Layout.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","reportWebVitals.ts","state/store.ts","index.tsx"],"names":["module","exports","AddItemForm","React","memo","props","console","log","useState","title","setTitle","error","setError","addItem","trim","type","value","onChange","e","currentTarget","onKeyPress","charCode","onClick","initialState","AppWithRedux","dispatch","useDispatch","addTodolist","useCallback","action","todolistId","v1","addTodolistAC","sumToDo","useSelector","state","todolists","length","className","style","main","About","context","href","EditableSpan","editMode","setEditMode","autoFocus","onBlur","onDoubleClick","Task","onTitleChangeHandler","newValue","changeTaskTitle","task","id","isDone","checked","color","newIsDoneValue","changeTaskStatus","removeTask","Todolist","addTask","changeTodolistTitle","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","tasksForTodolist","tasks","filter","t","removeTodolist","map","count","ToDoLists","taskId","removeTaskAC","addTaskAC","changeStatus","changeTaskStatusAC","newTitle","changeTaskTitleAC","changeTodolistTitleAC","tl","Layout","to","NotFoundPage","App","path","element","index","HomePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","stateCopy","newTasks","newTask","todolistTasks","copyState","todolist","find","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.356a20f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Home_main__1cIe5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"context\":\"About_context__1KE4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"context\":\"ToDoLists_context__1aKBZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"context\":\"NotFoundPage_context__2qVJ4\"};","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo( (props: AddItemFormPropsType) => {\r\n    console.log(\"AddItemForm is called\")\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <input type={'text'}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n        />\r\n        <button onClick={addItem}>\r\n            Enter\r\n        </button>\r\n    </div>\r\n} );\r\n","import {v1} from 'uuid';\r\nimport {FilterValuesType, TodolistType} from '../components/HomePage/HomePage';\r\n\r\nexport type RemoveTodolistActionType = {\r\n    type: 'REMOVE-TODOLIST',\r\n    id: string\r\n}\r\nexport type AddTodolistActionType = {\r\n    type: 'ADD-TODOLIST',\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTodolistTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id: string\r\n    title: string\r\n}\r\nexport type ChangeTodolistFilterActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\ntype ActionsType = RemoveTodolistActionType | AddTodolistActionType\r\n    | ChangeTodolistTitleActionType\r\n    | ChangeTodolistFilterActionType\r\n\r\nconst initialState: Array<TodolistType> =  []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistType> = initialState, action: ActionsType): Array<TodolistType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST': {\r\n            return state.filter(tl => tl.id != action.id)\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return [{\r\n                id: action.todolistId,\r\n                title: action.title,\r\n                filter: 'all'\r\n            }, ...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.filter = action.filter;\r\n            }\r\n            return [...state]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {\r\n    return { type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\nexport const addTodolistAC = (title: string): AddTodolistActionType => {\r\n    return { type: 'ADD-TODOLIST', title: title, todolistId: v1()}\r\n}\r\nexport const changeTodolistTitleAC = (id: string, title: string): ChangeTodolistTitleActionType => {\r\n    return { type: 'CHANGE-TODOLIST-TITLE', id: id, title: title}\r\n}\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType): ChangeTodolistFilterActionType => {\r\n    return { type: 'CHANGE-TODOLIST-FILTER', id: id, filter: filter}\r\n}\r\n\r\n","import React, {useCallback} from 'react'\r\nimport {TaskType} from '../Todolist';\r\nimport {AddItemForm} from '../AddItemForm';\r\nimport {addTodolistAC} from '../../state/todolists-reducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport style from './Home.module.css'\r\nimport {AppRootStateType} from '../../state/store';\r\n\r\nexport type FilterValuesType = 'all' | 'active' | 'completed';\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\nfunction AppWithRedux() {\r\n\r\n    const dispatch = useDispatch();\r\n    const addTodolist = useCallback((title: string) => {\r\n        const action = addTodolistAC(title);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    const sumToDo = useSelector<AppRootStateType, number>(state => state.todolists.length)\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <div>Введите имя ToDoList</div>\r\n            <AddItemForm addItem={addTodolist}/>\r\n            <div> Колличество дел={sumToDo} </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppWithRedux;\r\n","import React from 'react';\r\nimport style from './About.module.css'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className={style.context}>\r\n          <a href={'https://www.linkedin.com/in/amikhailovski/'}>https://www.linkedin.com/in/amikhailovski/</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n}\r\n\r\nexport const EditableSpan = React.memo(function(props: EditableSpanPropsType) {\r\n    console.log(\"EditableSpan\");\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    return editMode\r\n        ?    <input value={title} onChange={changeTitle} autoFocus onBlur={activateViewMode} />\r\n        : <span onDoubleClick={activateEditMode}>{props.value}</span>\r\n})\r\n","import React, {ChangeEvent, useCallback} from 'react'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {TaskType} from './Todolist'\r\n\r\ntype TaskPropsType = {\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    task: TaskType\r\n    todolistId: string\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = () => props.removeTask(props.task.id, props.todolistId)\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId)\r\n    }\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.changeTaskTitle, props.todolistId]);\r\n\r\n\r\n    return <div key={props.task.id} className={props.task.isDone ? 'is-done' : ''}>\r\n\r\n        <input type={'checkbox'}\r\n               checked={props.task.isDone}\r\n               color=\"primary\"\r\n               onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <button onClick={onClickHandler}>Delete</button>\r\n    </div>\r\n})\r\n","import React, {useCallback} from 'react'\r\nimport {AddItemForm} from './AddItemForm'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {FilterValuesType} from './HomePage/HomePage';\r\nimport {Task} from './Task';\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    console.log('Todolist is called')\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.changeFilter, props.id])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.changeFilter, props.id])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.changeFilter, props.id])\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === false)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === true)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <button onClick={removeTodolist}>\r\n                Delete\r\n            </button>\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task\r\n                    task={t}\r\n                    changeTaskStatus={props.changeTaskStatus}\r\n                    changeTaskTitle={props.changeTaskTitle}\r\n                    removeTask={props.removeTask}\r\n                    todolistId={props.id}\r\n                    key={t.id}\r\n                />)\r\n            }\r\n        </div>\r\n        <div>\r\n            <button onClick={onAllClickHandler}>All</button>\r\n            <button onClick={onActiveClickHandler}>Active </button>\r\n            <button onClick={onCompletedClickHandler}>Completed </button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n","import {v1} from 'uuid';\r\nimport {AddTodolistActionType, RemoveTodolistActionType} from './todolists-reducer';\r\nimport {TaskType} from '../components/Todolist';\r\nimport {TasksStateType} from '../components/HomePage/HomePage';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK',\r\n    todolistId: string\r\n    taskId: string\r\n}\r\n\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK',\r\n    todolistId: string\r\n    title: string\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS',\r\n    todolistId: string\r\n    taskId: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE',\r\n    todolistId: string\r\n    taskId: string\r\n    title: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n    | ChangeTaskTitleActionType\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n\r\nconst initialState: TasksStateType = {\r\n    count: []\r\n}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = {...state}\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = tasks.filter(t => t.id != action.taskId);\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TASK': {\r\n            const stateCopy = {...state}\r\n            const newTask: TaskType = {\r\n                id: v1(),\r\n                title: action.title,\r\n                isDone: false\r\n            }\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = [newTask, ...tasks];\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            let todolistTasks = state[action.todolistId];\r\n            state[action.todolistId] = todolistTasks\r\n                .map(t => t.id === action.taskId\r\n                    ? {...t, isDone: action.isDone}\r\n                    : t);\r\n            return ({...state});\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            let todolistTasks = state[action.todolistId];\r\n            state[action.todolistId] = todolistTasks\r\n                .map(t => t.id === action.taskId\r\n                    ? {...t, title: action.title}\r\n                    : t);\r\n            return ({...state});\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: []\r\n            }\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const copyState = {...state};\r\n            delete copyState[action.id];\r\n            return copyState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return {type: 'REMOVE-TASK', taskId: taskId, todolistId: todolistId}\r\n}\r\nexport const addTaskAC = (title: string, todolistId: string): AddTaskActionType => {\r\n    return {type: 'ADD-TASK', title, todolistId}\r\n}\r\nexport const changeTaskStatusAC = (taskId: string, isDone: boolean, todolistId: string): ChangeTaskStatusActionType => {\r\n    return {type: 'CHANGE-TASK-STATUS', isDone, todolistId, taskId}\r\n}\r\nexport const changeTaskTitleAC = (taskId: string, title: string, todolistId: string): ChangeTaskTitleActionType => {\r\n    return {type: 'CHANGE-TASK-TITLE', title, todolistId, taskId}\r\n}\r\n\r\n","import React, {useCallback} from 'react';\r\nimport {Todolist} from '../Todolist';\r\nimport {v1} from 'uuid';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../state/store';\r\nimport {FilterValuesType, TasksStateType, TodolistType} from '../HomePage/HomePage';\r\nimport {addTaskAC, changeTaskStatusAC, changeTaskTitleAC, removeTaskAC} from '../../state/tasks-reducer';\r\nimport {\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleAC,\r\n    removeTodolistAC\r\n} from '../../state/todolists-reducer';\r\nimport style from './ToDoLists.module.css'\r\n\r\nconst ToDoLists = () => {\r\n\r\n    let todolistId1 = v1();\r\n    let todolistId2 = v1();\r\n\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const dispatch = useDispatch();\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const action = removeTaskAC(id, todolistId);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const action = addTaskAC(title, todolistId);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    const changeStatus = useCallback(function (id: string, isDone: boolean, todolistId: string) {\r\n        const action = changeTaskStatusAC(id, isDone, todolistId);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const action = changeTaskTitleAC(id, newTitle, todolistId);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const action = removeTodolistAC(id);\r\n        dispatch(action);\r\n    }, [dispatch]);\r\n\r\n    const changeTodolistTitle = useCallback((id: string, title: string) => {\r\n        const action = changeTodolistTitleAC(id, title);\r\n        dispatch(action);\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={style.context}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id];\r\n                    let tasksForTodolist = allTodolistTasks;\r\n\r\n                    return   <Todolist\r\n                        id={tl.id}\r\n                        title={tl.title}\r\n                        tasks={tasksForTodolist}\r\n                        removeTask={removeTask}\r\n                        changeFilter={changeFilter}\r\n                        addTask={addTask}\r\n                        changeTaskStatus={changeStatus}\r\n                        filter={tl.filter}\r\n                        removeTodolist={removeTodolist}\r\n                        changeTaskTitle={changeTaskTitle}\r\n                        changeTodolistTitle={changeTodolistTitle}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoLists;","import React from 'react';\r\nimport {NavLink, Outlet} from 'react-router-dom';\r\n\r\nconst Layout = () => {\r\n    return (\r\n        <>\r\n            <header>\r\n                <NavLink to=\"/\">Home</NavLink>\r\n                <NavLink to=\"/to_do_lists\">ToDoLists</NavLink>\r\n                <NavLink to=\"/about\">About</NavLink>\r\n            </header>\r\n\r\n            <Outlet/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './NotFoundPage.module.css'\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <div className={style.context}>\r\n            <div>Страница не найдена, ошибка 404</div>\r\n            <NavLink to=\"\">Вернуться на главную</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;","import React from 'react';\nimport {Route, Routes} from 'react-router-dom';\nimport './App.css';\nimport HomePage from './components/HomePage/HomePage';\nimport About from './components/About/About';\nimport ToDoLists from './components/ToDoLists/ToDoLists';\nimport Layout from './components/Layout';\nimport NotFoundPage from './components/NotFoundPage/NotFoundPage';\n\nfunction App() {\n\n    return <>\n        <Routes>\n            <Route path=\"/\" element={<Layout/>}>\n            <Route index element={<HomePage/>}/>\n            <Route path=\"about\" element={<About/>}/>\n            <Route path=\"to_do_lists\" element={<ToDoLists/>}/>\n            <Route path=\"*\" element={<NotFoundPage/>}/>\n            </Route>\n        </Routes>\n    </>\n        ;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {tasksReducer} from './tasks-reducer';\r\nimport {todolistsReducer} from './todolists-reducer';\r\nimport {combineReducers, createStore} from 'redux';\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    tasks: tasksReducer,\r\n    todolists: todolistsReducer\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer);\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './state/store';\n\nReactDOM.render(\n        <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n        </Provider>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}